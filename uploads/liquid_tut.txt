--Liquid tutorial--- http://shopify.github.io/liquid/

1){{}} -- for output
2) {{% %}}-- logical
3) {% if product.title == 'Awesome Shoes' %}
		These shoes are awesome!
		{% endif %}
		
4) {% unless product.title == 'Awesome Shoes' %}
  These shoes are not awesome.
{% endunless %} 
--The opposite of if – executes a block of code only if a certain condition is not met.

5) 
		{% if customer.name == 'kevin' %}
		  Hey Kevin!
		{% elsif customer.name == 'anonymous' %}
		  Hey Anonymous!
		{% else %}
		  Hi Stranger!
		{% endif %}  --Adds more conditions within an if or unless block.

6)		case/when

		{% assign handle = 'cake' %} -- to deecalre a variable with some value
		{% case handle %}
		  {% when 'cake' %}
			 This is a cake
		  {% when 'cookie' %}
			 This is a cookie
		  {% else %}
			 This is not a cake nor a cookie
		{% endcase %}

--Iterations  link:	http://shopify.github.io/liquid/tags/iteration/	
7) For Loop:

		{% for product in collection.products %}
		{{ product.title }}
	  {% endfor %}
	  
	  For Loop Objects: link: https://help.shopify.com/en/themes/liquid/objects/for-loops
	  
		1. forloop.first --Returns true if it's the first iteration of the for loop. Returns false if it is not the first iteration.
					{% for product in collections.frontpage.products %}
			{% if forloop.first == true %}
				First time through!
			{% else %}
				Not the first time.
			{% endif %}
		{% endfor %}
		
		3. forloop.index -- Returns the current index of the for loop, starting at 1.
		
				{% for product in collections.frontpage.products %}
			{{ forloop.index }}
		{% else %}
			// no products in your frontpage collection
		{% endfor %}
		
		--output  --1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
		
		4.forloop.index0 --Returns the current index of the for loop, starting at 0.
					{% for product in collections.frontpage.products %}
		  {{ forloop.index0 }}
		{% endfor %}
		
			output --0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
			
		5.forloop.last --Returns true if it's the last iteration of the for loop. Returns false if it is not the last iteration.	
				{% for product in collections.frontpage.products %}
			{% if forloop.last == true %}
				This is the last iteration!
			{% else %}
				Keep going...
			{% endif %}
		{% endfor %}
		
		6.forloop.length --Returns the number of iterations of the loop.
		
			<!-- if collections.frontpage.products contains 4 products -->
				{% for product in collections.frontpage.products %}
				  {% if forloop.first %}
				  <p>This collection has {{ forloop.length }} products:</p>
				  {% endif %}
				  <p>{{ product.title }}</p>
				{% endfor %}
				
			7.forloop.rindex --Returns forloop.index in reverse order.
			8.forloop.rindex0 --Returns forloop.index0 in reverse order.

8) break --Causes the loop to stop iterating when it encounters the break tag.			 --link:http://shopify.github.io/liquid/tags/iteration/

{% for i in (1..5) %}
  {% if i == 4 %}
    {% break %}
  {% else %}
    {{ i }}
  {% endif %}
{% endfor %}

output -- 1 2 3

9)continue -- Causes the loop to skip the current iteration when it encounters the continue tag.			 --link:http://shopify.github.io/liquid/tags/iteration/

Input


{% for i in (1..5) %}
  {% if i == 4 %}
    {% continue %}
  {% else %}
    {{ i }}
  {% endif %}
{% endfor %}

Output

1 2 3   5

10) for (parameters)
limit -- Limits the loop to the specified number of iterations. link: http://shopify.github.io/liquid/tags/iteration/

Input


<!-- if array = [1,2,3,4,5,6] -->
{% for item in array limit:2 %}
  {{ item }}
{% endfor %}

Output

1 2

11) offset -- Begins the loop at the specified index. link: http://shopify.github.io/liquid/tags/iteration/

Input


<!-- if array = [1,2,3,4,5,6] -->
{% for item in array offset:2 %}
  {{ item }}
{% endfor %}

Output

3 4 5 6

12)range-- Defines a range of numbers to loop through. The range can be defined by both literal and variable numbers. link: http://shopify.github.io/liquid/tags/iteration/

Input


{% for i in (3..5) %}
  {{ i }}
{% endfor %}

{% assign num = 4 %}
{% for i in (1..num) %}
  {{ i }}
{% endfor %}

Output

3 4 5
1 2 3 4


12) reversed
Reverses the order of the loop. Note that the flag’s spelling is different to the filter reverse.

Input


<!-- if array = [1,2,3,4,5,6] -->
{% for item in array reversed %}
  {{ item }}
{% endfor %}

Output

6 5 4 3 2 1

13)	cycle
Loops through a group of strings and outputs them in the order that they were passed as parameters. Each time cycle is called, the next string that was passed as a parameter is output.

cycle must be used within a for loop block.

Input


{% cycle 'one', 'two', 'three' %}
{% cycle 'one', 'two', 'three' %}
{% cycle 'one', 'two', 'three' %}
{% cycle 'one', 'two', 'three' %}

Output

one
two
three
one
Uses for cycle include:

applying odd/even classes to rows in a table
applying a unique class to the last product thumbnail in a row

14) cycle (parameters)
cycle accepts a parameter called cycle group in cases where you need multiple cycle blocks in one template. If no name is supplied for the cycle group, then it is assumed that multiple calls with the same parameters are one group.

15) tablerow-- Generates an HTML table. Must be wrapped in opening <table> and closing </table> HTML tags.

Input


<table>
{% tablerow product in collection.products %}
  {{ product.title }}
{% endtablerow %}
</table>

Output

<table>
  <tr class="row1">
    <td class="col1">
      Cool Shirt
    </td>
    <td class="col2">
      Alien Poster
    </td>
    <td class="col3">
      Batman Poster
    </td>
    <td class="col4">
      Bullseye Shirt
    </td>
    <td class="col5">
      Another Classic Vinyl
    </td>
    <td class="col6">
      Awesome Jeans
    </td>
  </tr>
</table>		


------------------operators--------------------
Operators
Liquid includes many logical and comparison operators.

Basic operators
==	equals
!=	does not equal
>	greater than
<	less than
>=	greater than or equal to
<=	less than or equal to
or	logical or
and	logical and
For example:


{% if product.title == "Awesome Shoes" %}
  These shoes are awesome!
{% endif %}

You can use multiple operators in a tag:


{% if product.type == "Shirt" or product.type == "Shoes" %}
  This is a shirt or a pair of shoes.
{% endif %}

contains
contains checks for the presence of a substring inside a string.


{% if product.title contains 'Pack' %}
  This product's title contains the word Pack.
{% endif %}

contains can also check for the presence of a string in an array of strings.


{% if product.tags contains 'Hello' %}
  This product has been tagged with 'Hello'.
{% endif %}

contains can only search strings. You cannot use it to check for an object in an array of objects.